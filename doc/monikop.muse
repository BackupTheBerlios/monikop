#title Monikop
#subtitle Some Subtitelish Text

* Purpose

Suppose we have an isolated network of data producing computers
(Sources), e.g. in a surveying vehicle (Rover). The collected data (a
few Terabytes per day) need to be transferred to a processing server
(Destination) in office.

This data transfer, which happens by means of removable disks, is our
job.

On Rover, a couple of removable disks are put into a dedicated computer where they are
filled automatically by Monikop with data pulled from Sources.

The disks are then carried to the office where they are put into another
dedicated computer. Here, Monikop's counterpart called Pokinom pushes
their content to Destination and makes the disks re-usable by
Monikop. 

The heavy lifting is done by [[http://www.samba.org/rsync/][rsync]]. Sources as well as Destination
need to have rsync servers installed.

 - Transfer rates ca. ...


* Installation

Debian packages to use

 - to install from a git repository: git-core;

 - to run Monikop and Pokinom: 
   rsync, mingetty, sudo, libcurses-perl, libfile-rsync-perl,
   mingetty;

 - to run the tests: bc, time.


Prepare removable disks and their mount points:

Create Filesystems with labels. Example (suppose disk tagged =disk_10= is attached to =/dev/sdg1=):

=mke2fs -j -L disk_10 /dev/sdg1=

Label the swap partition:

=swapoff=
TODO
=swapon=
 
In =/etc/fstab=, make use of the disk labels:

<src lang="conf">
## System partitions ###
LABEL=root     /               ext3  defaults,errors=remount-ro 0  1
LABEL=swap     none            swap  sw                         0  0
## Removable disks                   
LABEL=disk_01  /media/disk_01  ext3  rw,user,auto               0  0
LABEL=disk_02  /media/disk_02  ext3  rw,user,auto               0  0
# etc
</src>
 
Make sure system boots actually from the system disk rather than from
some of the removable ones. Change =/boot/grub/menu.lst= where is says
<src lang="conf"># kopt=root=...</src>:

<src lang="conf">
### BEGIN AUTOMAGIC KERNELS LIST
## lines between the AUTOMAGIC KERNELS LIST markers will be modified
## by the debian update-grub script except for the default options below

## DO NOT UNCOMMENT THEM, Just edit them to your needs

## ## Start Default Options ##
## default kernel options
## default kernel options for automagic boot options
## If you want special options for specific kernels use kopt_x_y_z
## where x.y.z is kernel version. Minor versions can be omitted.
## e.g. kopt=root=/dev/hda1 ro
##      kopt_2_6_8=root=/dev/hdc1 ro
##      kopt_2_6_8_2_686=root=/dev/hdc2 ro
# kopt=root=/dev/disk/by-label/root noresume ro
</src>
 
and call
 
=update-grub=

Create a user on both Monikop's and Pokinom's machine. For
descriptions sake, we assume they're called m-operator.

Get Monikop (and Pokinom); from m-operator's home directory say:

=git-clone (FIXME: repo here)=

Copy =monikop.config.example= to =monikop.config= and
=pokinom.config.example= to =pokinom.config= and
adapt them according to your needs. Both have helpful comments,
and both are perl code, so be careful and keep the interpunction
in place. 

Things you want to change for Monikop in =monikop.config=:

<src lang="perl">
# Possible data sources, and by what directory name to represent them in
# destination.
# When the latter is not unique, care must be taken that all pathnames in the 
# respective sources are unique.
%sources = (
    'data_producer1::data' => 'p1',
    'data_producer2::data' => 'p2',
    'data_producer3::data' => '',
    'data_producer4::data' => '',
    );

# Possible mount points of data destinations.
@usable_mount_points = (
    '/media/disk_1',
    '/media/disk_2',
    '/media/disk_3',
    );
</src>

=%sources= are the data producing Sources in a format rsync
understands, together with a source-specific directory name where data
of the respective Source goes. Those directory names can be equal for
several Sources if all filenames are certain to be unique.

=@usable_mount_points= are mount points (directories) for your
removable disks. Every disk needs its own mountpoint whose name should
correspond to the disk's label.
   
Things you want to change for Pokinom in =pokinom.config=:

<src lang="perl">
# Possible mount points.
@usable_mount_points = (
    '/media/disk_1',
    '/media/disk_2',
    '/media/disk_3',
    );
</src>


** Automatic login (Monikop and Pokinom):

=/etc/inittab=: change line which says

<src lang="conf">
1:2345:respawn:/sbin/getty 38400 tty1
</src>

into

<src lang="conf">
1:2345:respawn:/sbin/mingetty --autologin m-operator --noclear tty1
</src>

** Autostart (Monikop and Pokinom):
   Append to =~/.profile= (create if necessary):
   <src lang="bash">
   /home/m-operator/monikop/monikop
   </src>
   or
   <src lang="bash">
   /home/m-operator/monikop/pokinom,
   respectively.
   </src>

   If necessary, specify path to config file, e.g.  
   <src lang="bash">
   /home/m-operator/monikop/monikop /home/m-operator/monikop/monikop.config
   </src>


** Authorize m-operator to shut down computer

Use =visudo= to change =/etc/sudoers=; add:

   <src lang="conf">
   messung ALL=(ALL) NOPASSWD: /sbin/halt -p
   messung ALL=(ALL) NOPASSWD: /sbin/reboot
   </src>

** Network setup

*** Monikop

    - =/etc/hosts=
      <src lang="conf">
      127.0.0.1      localhost
      192.168.200.10 central
      192.168.178.20 nav
      192.168.200.30 front
      192.168.178.40 data
      192.168.200.50 rear-left
      192.168.200.60 rear-right
      192.168.200.70 scanner
      </src>

    - =/etc/network/interfaces=
      <src lang="conf">
      # The loopback network interface
      auto lo
      iface lo inet loopback
      
      # central
      allow-hotplug eth1
      iface eth1 inet static
         address 192.168.200.9
         netmask 255.255.255.248
      
      # switch
      allow-hotplug eth2
      iface eth2 inet static
         address 192.168.178.40
         netmask 255.255.240.0
         gateway 192.168.180.169
      
      # front
      allow-hotplug eth3
      iface eth3 inet static
         address 192.168.200.29
         netmask 255.255.255.248
      
      # rear-left
      allow-hotplug eth4
      iface eth4 inet static
         address 192.168.200.49
         netmask 255.255.255.248
      
      # rear-right
      allow-hotplug eth5
      iface eth5 inet static
         address 192.168.200.59
         netmask 255.255.255.248
      
      # scanner
      allow-hotplug eth6
      iface eth6 inet static
         address 192.168.200.69
         netmask 255.255.255.248
      </src>

    - Provide for non-overlapping subnets. (http://jodies.de/ipcalc may be helpful.)

*** Data sources

    - Windows: Location of =/etc/hosts/=: =%SystemRoot%\system32\drivers\etc\hosts=

    - IP address 192.168.200.60
    - Subnet mask 255.255.255.248

    - =/etc/hosts=:

    <src lang="conf">
      127.0.0.1      localhost
      192.168.178.10 central
      192.168.178.20 nav
      192.168.178.30 front
      192.168.178.40 data
      192.168.178.50 rear-left
      192.168.178.60 rear-right
      192.168.178.70 scanner
    </src>

    - =rsyncd.conf=:

    (click Start, Programs, csRsyncServer, rsyncd.conf)
    <src lang="conf">
    use chroot = false
    strict modes = false
    hosts allow = *
    logfile = rsyncd.log
    [log]
    #   /cygdrive/e/log stands for E:\log
        path = /cygdrive/e/log
        read only = false
        transfer logging = false
    </src>
        <src lang="conf">
       pid file=/var/run/rsyncd.pid
       [log]
           path = /media/platte_03
           use chroot = yes
           lock file = /var/lock/rsyncd
           read only = yes
           list = yes
           uid = nobody
           gid = nogroup
           strict modes = yes
           ignore errors = no
           ignore nonreadable = yes
           transfer logging = no
        </src>

*** Pokinom
*** fsck-pokinom
*** Data destination

** Rsync server installation

    - Linux

    =/etc/default/rsync=:
    Change line from
    <src lang="conf">
    RSYNC_ENABLE = false
    </src>
    to
    <src lang="conf">
    RSYNC_ENABLE = true
    </src>
    =/etc/rsyncd.conf:=

    <src lang="conf">
     gid = str_db1_media
     use chroot = yes
     max connections = 0
     pid file = /var/run/rsyncd.pid
     
     [media]
             path = /mnt/./data0
             list = no
             comment = Pokinom only (requires authentication)
             read only = no
             incoming chmod = g+r,g+w
             write only = yes
             # Pokinom's IP:
             hosts allow = 192.168.180.120
             auth users = m-operator
             secrets file = /etc/rsyncd.secrets
    </src>

    =/etc/rsyncd.secrets=:

    <src lang="conf">
    m-operator:seCreT
    </src>

    Data source (rover)
    Data destination (office)

    - Windows

    install cwrsync:
    http://sourceforge.net/projects/sereds/files/cwRsync/4.0.3/cwRsyncServer_4.0.3_Installer.zip/download
    rsyncd.conf
    Service rsync: autostart

* Usage

   - You have to be able to tell from your data if it's complete.
   - Monikop shows which disks have data and therefore should be
     transferred to Pokinom.
   - Monikop keeps starting over until shutdown or until disappearance
     or data source(s)
   - Pokinom needs sufficient amount of free space on sink; must be
     rebooted once this is not the case.
   - fsck-monikop: to be run by root
   - Backup functionality: data remains on disks until re-inserted in
     Monikop. Names in use.

* Bugs

  - Data must not contain any directories called $rsync_partial_dir_name
  - Doesn't reflect disappearance of files on sources
  - May ignore empty dirs (really?)
   
* License

