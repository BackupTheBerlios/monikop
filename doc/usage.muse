#title Monikop and Pokinom
#subtitle rsync between unconnected hosts
#author Bert Burgemeister

* Usage

Both Monikop and Pokinom will create automatically any directories they need.

** Monikop

Put removable disks into Monikop's host on Rover and switch it on. Immediately,
Monikop starts pulling data from Sources it can reach. Monikop will
notice additional Sources that become reachable later and will start
pulling data there as well.

For each Source, Monikop keeps starting over to see if there is new
data. Only Monikop's shutdown or the disappearance of the data Source
will end this cycle.

One removable disk is sufficient for Monikop's correct
operation; but if speed is important, putting in as many disks as
there are data Sources may be beneficial as Monikop uses them in parallel.

To end a session, press [F3] to shut down Monikop, and remove the
disks. Monikop's display shows which disks are not yet used so you
can avoid carrying empty disks around.



** Pokinom

Put removable disks into Pokinom's host in office and switch it
on. Immediately, Pokinom starts pushing data to Destination. You
should wait until it's finished, otherwise files, even if copied to
Destination, can't be deleted from their removable disks by Monikop.

Press [F9] to toggle whether or not you want Pokinom to shut down
when finished. 

File permissions in Destination's receiving directory must not be
changed in a way that prevents the rsync server from modifying.
Best practice is to move anything out of this directory prior to any
processing. 

Pokinom needs a sufficient amount of free disk space on Destination; it
must be rebooted once this temporarily hasn't been the case. 


   - data transferred, but to ignore



** fsck-pokinom
   - TODO: unfinished
   - fsck-pokinom: to be run by root


** Recovering Lost Data

   - Backup functionality: data remains on disks until re-inserted in
     Monikop. Names in use. How to recover.
   - Re-copy data from Source: delete from log the two files per Source that
     are named by $rsync_log_prefix and $finished_prefix in [[installation#monikop.config][monikop.config]].


* Bugs

  - Monikop and Pokinom allow files on Sources to change at any time
    and will reflect such changes in Destination. As a downside,
    Monikop and Pokinom are unable to tell whether a file is transferred
    completely. You should be able to assert completeness of your
    files by other means.
  - Payload data must not contain any directories with the names set
    by =$rsync_partial_dir_name= in 
    [[installation#monikop][monikop.config]]/[[installation#pokinom.config][pokinom.config]]
  - Deletions on Sources won't propagate to Destination.
  - May ignore empty dirs on Sources (TODO: really?)
  - During copying, occasionally obsolete versions of a file may
    temporarily appear on Destination. This can happen with files that
    have grown bigger after having been copied already.
  - Frequent power cuts (as opposed to normal shutdown operations) may
    compromise efficiency in terms of disk usage.
  - By running multiple instances of Rsync, Monikop puts considerable strain
    on the system, which may reveal previously unnoticed hardware faults.

; System reports disk error on (say) /dev/sdb1. What is it's label?
; ls -l /dev/disk/by-label

