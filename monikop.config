# -*- perl -*-
# Possible data sources.
%source_roots = (
#    'tt11' => '/log',
#    'tt10' => '/log',
#    'tt9' => '/log',
    'vvastr164' => '::ftp',
    'lsstr174' => '::rsynctest',
    );
#%source_roots = ('tt11' => '/log');
# Possible mount points of data destinations. Must be unique.
@usable_mount_points = (
    '/root/tt6',
    '/root/tt7',
#    '/root/tt8',
    '/blah',
    );
# Directory (under a mount point) to put new data in.
$path_in_destination =
    'measuring_data';
# A directory (under a mount point) of this name will be deleted.
$path_in_destination_backed_up =
    'backed_up';
# Directory name (under a mount point) while being deleted.
$path_in_destination_being_deleted =
    'being_deleted';
# Prefix of the directory name inside $path_in_destination where rsync stores 
# unfinished files.
$rsync_tempdir_prefix = '.rsync_temp_';
# Full path to rsync's raw log
$rsync_log_prefix =
    '/root/log.';
# Full path to list of successfully rsynced files.
$finished_prefix =
    '/root/finished_'; 
# How to name the duplicate of a safe file.
$safe_file_backup_suffix =
    '_bak'; 
# Name of a safe file wannabe.
$safe_file_unfinished_suffix =
    '_unfinished'; 
# What to do (shutdown) when F3 has been pressed
$key_f3_action =
    "touch f3_pressed";
# What to do (reboot) when F6 has been pressed
$key_f6_action =
    "touch f6_pressed";
# Rsyncs time (in seconds) to wait for a response.
my $rsync_timeout = 5;
